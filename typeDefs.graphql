scalar DateTime

type User {
    """
    ユーザーの一位のGithHubログインID
    """
    githubLogin: ID!
    """
    ユーザーの姓名
    """
    name: String
    """
    ユーザーのGitHubプロフィール画像のURL
    """
    avatoar: String
    """
    このユーザーが投稿した全写真
    """
    postedPhotos: [Photo!]!
    inPhotos: [Photo!]!
}

enum PhotoCategory {
  SELFIE
  PORTRAIT
  ACTION
  LANDSCAPE
  GRAPHIC
}

type Photo {
  id: ID!
  url: String!
  name: String!
  description: String
  category: PhotoCategory!
  postedBy: User!
  taggedUsers: [User!]!
  created: DateTime!
}

input PostPhotoInput {
      "新しい写真の名前"
      name: String!
      "(optional)写真のかんたんな説明"
      description: String
      "(optional)写真のカテゴリ"
      category: PhotoCategory=PORTRAIT
}

type Query {
  totalPhotos: Int!
  allPhotos(after: DateTime): [Photo!]!
  totalUsers: Int!
  allUsers: [User!]!
}

type Mutation {
  postPhoto(input: PostPhotoInput!): Photo!
}
