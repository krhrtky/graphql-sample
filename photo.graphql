scalar Datetime

enum PhotoCategory {
  SELFIE
  PORTRAIT
  ACTION
  LANDSCAPE
  GRAPHIC
}

enum SortDirection {
  ASCENDING
  DESCENDING
}

enum SortablePhotoField {
  name
  description
  category
  created
}

type User {
  githubLogin: ID!
  name: String
  avatoar: String
  postedPhotos: [Photo!]!
  inPhotos: [Photo!]
  friends: [FriendShip!]!
}

type Photo {
  id: ID!
  name: String!
  url: String!
  description: String
  created: Datetime!
  category: PhotoCategory!
  postedBy: User!
  taggedUsers: [User!]!
}

type FriendShip {
  friends: [User!]!
  howLong: Int!
  whereWeMet: Location
}

type Query {
  totalPhotos: Int!
  allPhotos(category: PhotoCategory): [Photo!]!
  totalUsers: Int!
  allUsers(first: Int=50 start: Int=0): [User!]!
  User(githubLogin: ID!): User!
  Photo(id: ID!): Photo!
  allPhotos(first: Int=25 start: Int=0): [Photo!]!
  allPhotos(
    sort: SortDirection = DESCENDING
    sortby: SortablePhotoField = created
    ): [Photo!]!
}

schema {
  query: Query
  mutation: Mutation
}


input PostPhotoInput {
    name: String!
    description: String
    category: PhotoCategory=PORTRAIT
}


type Mutation {
  postPhoro(input: PostPhotoInput!): Photo!
}

